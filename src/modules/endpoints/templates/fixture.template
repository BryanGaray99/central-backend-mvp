// Generated by the auto-generation engine
import { faker } from '@faker-js/faker';

// Import the generated creation DTO
import { Create{{ entityName }}Dto } from '../../types/{{ entityNameLC }}';

export class {{ entityName }}Fixture {
  static createDto(overrides: Partial<Create{{ entityName }}Dto> = {}): Create{{ entityName }}Dto {
    const defaultDto: Create{{ entityName }}Dto = {
      {{#each fields}}
      {{ this.name }}: {{#if this.example}}{{ this.example }}{{else}}{{ this.type }}(){{/if}},
      {{/each}}
    };

    return { ...defaultDto, ...overrides };
  }

  static createEntity(overrides: any = {}): any {
    return {
      id: faker.string.uuid(),
      {{#each fields}}
      {{ this.name }}: {{#if this.example}}{{ this.example }}{{else}}{{ this.type }}(){{/if}},
      {{/each}}
      createdAt: faker.date.recent().toISOString(),
      updatedAt: faker.date.recent().toISOString(),
      ...overrides
    };
  }
}

// Helpers to generate example values based on type
function string(): string {
  return faker.lorem.word();
}

function number(): number {
  return faker.number.int({ min: 1, max: 1000 });
}

function boolean(): boolean {
  return faker.datatype.boolean();
}

function array(): any[] {
  return [];
}

function object(): Record<string, any> {
  return {};
} 